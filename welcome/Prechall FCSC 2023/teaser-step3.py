
DAT_00104060 = [0xfc,
0xff,
0xff,
0xff,
0xff,
0xff,
0xff,
0x7f,
0x51,
0x11,
0x51,
0x00,
0x44,
0x50,
0x04,
0x40,
0x5d,
0x7d,
0xd7,
0x75,
0x55,
0xdd,
0xd5,
0x7d,
0x51,
0x04,
0x50,
0x15,
0x51,
0x45,
0x54,
0x45,
0xdd,
0xf5,
0x57,
0x75,
0xdd,
0x5d,
0x5d,
0x5f,
0x45,
0x50,
0x45,
0x44,
0x11,
0x10,
0x05,
0x41,
0xf5,
0x57,
0xdd,
0x77,
0xdf,
0x7f,
0xf7,
0x5d,
0x01,
0x00,
0x45,
0x44,
0x41,
0x10,
0x45,
0x54,
0xfd,
0xfd,
0xd5,
0xdd,
0xff,
0x7d,
0xf5,
0x75,
0x11,
0x10,
0x14,
0x11,
0x05,
0x40,
0x50,
0x44,
0xf7,
0xdf,
0xf7,
0xdd,
0xf5,
0x77,
0x57,
0x77,
0x11,
0x40,
0x10,
0x01,
0x40,
0x14,
0x15,
0x44,
0x57,
0xff,
0x7d,
0x57,
0xdd,
0x5d,
0xf5,
0x55,
0x51,
0x11,
0x04,
0x55,
0x15,
0x44,
0x51,
0x54,
0xd7,
0xdd,
0x55,
0xf5,
0x57,
0xff,
0xd7,
0x75,
0x01,
0x04,
0x55,
0x45,
0x50,
0x04,
0x54,
0x54,
0xd5,
0xdf,
0xf7,
0xdd,
0xd7,
0xff,
0xd5,
0x55,
0x15,
0x54,
0x01,
0x50,
0x04,
0x00,
0x04,
0x40,
0xfd,
0x75,
0x77,
0x5d,
0xff,
0xd7,
0xf7,
0x57,
0x15,
0x01,
0x10,
0x01,
0x04,
0x14,
0x45,
0x55,
0xd5,
0xf5,
0x5d,
0xdd,
0x7f,
0xfd,
0x7d,
0x5d,
0x15,
0x14,
0x44,
0x45,
0x01,
0x05,
0x00,
0x40,
0x55,
0x77,
0x77,
0x5f,
0xfd,
0xfd,
0xdf,
0x57,
0x51,
0x14,
0x54,
0x41,
0x14,
0x44,
0x41,
0x55,
0xfd,
0xfd,
0x5d,
0x7f,
0xd5,
0x5f,
0x75,
0x55,
0x01,
0x41,
0x44,
0x11,
0x45,
0x4,
0x14,
0x54,
0xd5,
0x5f,
0xdd,
0xf5,
0x75,
0x77,
0x7f,
0x7f,
0x15,
0x54,
0x15,
0x14,
0x14,
0x44,
0x11,
0x41,
0xd7,
0xd7,
0xf5,
0x57,
0xff,
0xf5,
0x5d,
0x77,
0x15,
0x50,
0x10,
0x45,
0x0,
0x10,
0x41,
0x44,
0x7d,
0x7f,
0xdf,
0xdd,
0x7f,
0xd7,
0xdd,
0x75,
0x5,
0x10,
0x5,
0x40,
0x0,
0x15,
0x45,
0x40,
0x75,
0x77,
0x5d,
0x75,
0xff,
0x55,
0xd5,
0x5f,
0x41,
0x41,
0x40,
0x15,
0x1,
0x50,
0x14,
0x41,
0xdd,
0xff,
0xfd,
0x5d,
0xdf,
0xd7,
0xfd,
0x5f,
0x51,
0x51,
0x51,
0x45,
0x5,
0x41,
0x15,
0x44,
0x77,
0x5d,
0x5f,
0xff,
0xfd,
0x57,
0xf7,
0x55,
0x51,
0x4,
0x4,
0x41,
0x0,
0x15,
0x51,
0x51,
0x5f,
0x5d,
0xdd,
0x55,
0xf5,
0x55,
0x57,
0x77,
0x15,
0x45,
0x11,
0x15,
0x15,
0x50,
0x15,
0x44,
0xd5,
0x5d,
0xdd,
0xf7,
0xfd,
0xf7,
0xf5,
0x55,
0x1,
0x45,
0x5,
0x10,
0x41,
0x0,
0x1,
0x50,
0xd7,
0xf5,
0xd7,
0xd7,
0xff,
0xf7,
0xfd,
0x57,
0x11,
0x11,
0x51,
0x41,
0x40,
0x11,
0x1,
0x51,
0x77,
0xdd,
0x5d,
0xdf,
0x5f,
0x7f,
0xfd,
0x77,
0x41,
0x1,
0x10,
0x45,
0x10,
0x14,
0x40,
0x40,
0xf5,
0x75,
0x77,
0x75,
0x5f,
0x77,
0xf7,
0x5f,
0x15,
0x15,
0x51,
0x14,
0x44,
0x41,
0x41,
0x40,
0x7d,
0xf7,
0x57,
0xf7,
0x7d,
0xdf,
0xf7,
0x7d,
0x41,
0x14,
0x41,
0x4,
0x11,
0x10,
0x14,
0x50,
0xfd,
0x7d,
0xf7,
0xd7,
0x57,
0xdf,
0xfd,
0x5d,
0x1,
0x11,
0x41,
0x50,
0x44,
0x1,
0x15,
0x54,
0xfd,
0x77,
0xfd,
0x7d,
0xf7,
0xdd,
0xd5,
0x57,
0x5,
0x11,
0x5,
0x14,
0x41,
0x5,
0x1,
0x50,
0x77,
0x55,
0xf5,
0x57,
0x55,
0x7d,
0xdf,
0x5d,
0x11,
0x45,
0x44,
0x44,
0x14,
0x41,
0x4,
0x41,
0xfd,
0x5d,
0x57,
0xdd,
0x77,
0x55,
0xff,
0x5f,
0x11,
0x54,
0x15,
0x41,
0x15,
0x54,
0x0,
0x45,
0x75,
0x77,
0xdd,
0x57,
0x75,
0xdd,
0x5d,
0x75,
0x5,
0x14,
0x11,
0x51,
0x15,
0x11,
0x45,
0x54,
0xd7,
0xd7,
0xd7,
0x7d,
0xd5,
0xff,
0x7d,
0x57,
0x11,
0x50,
0x40,
0x0,
0x51,
0x0,
0x10,
0x4,
0xff,
0xff,
0xff,
0xff,
0xff,
0xff,
0xff,
0x3f]

local_1028 = [0] * 0x3f * 0x40

for i in range(8):
    for local_c in range(0x3f):
        for local_10 in range(8):  # 0x40 = 64 en dÃ©cimal (soit 8x8)
            if ((DAT_00104060[i + local_c * 8] >> (local_10 & 0x3f)) & 0x1) == 0:
                local_1028[i * 8 + local_10 + local_c * 0x40] = '.'     # '." 0x20 -> espace
                #print('.', end='')
            else:
                local_1028[i * 8 + local_10 + local_c * 0x40] = chr(0x2588)     # '#' 0x23 -> #
                #print('#', end='')
        #print()

for local_c in range(0x3f):
    for local_10 in range(0x40):
        print(local_1028[local_10 + local_c * 0x40], end='')
    print()